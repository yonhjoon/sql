<CREATE>
    객체를 새로 생성하는 구문

CREATE TABLE 테이블명 (
        컬럼명 자료형 ( 크기 ),
        컬럼명 자료형 ( 크기 ),
        컬럼명 자료형,
        ...
    )

- 1) 문자 ( CHAR (바이트크기) | VARCHAT2 (바이트크기) ) -> 반드시 크기지정을 해야함
            - 1_1) CHAR : 최대 2000바이트까지 저장가능 / 고정길이(고정된 글자수의 데이터가 담길 경우)
                         (지정한 크기보다 더 작은 값이 들어오면 공백으로라도 채워서 처음 지정한 크기를 만들어준다.)
                         
            - 1_2) VARCHAR2 : 최대 4000바이트까지 저장가능 / 가변길이(몇글자의 데이터가 담길지 모르는 경우)
                             (담긴 값에 따라서 공간 크기가 맞춰짐)
                             
    - 2) 숫자 ( NUMBER )
    
    - 3) 날짜 ( DATE )

예 ) CREATE TABLE MEMBER(
    	MEM_NO NUMBER,
    	MEM_ID VARCHAR2(20),
	...
	)

-- 데이터 딕셔너리 : 다양한 객체들의 정보를 저장하고있는 시스템테이블

 2. 컬럼에 주석달기 (컬럼에 대한 간단한 설명)
    
    [표현법]
    COMMENT ON COLUMN 테이블명.컬럼명 IS 주석내용
    -> 잘못 작성시 새로 수정하면 된다.

예 ) COMMENT ON COLUMN MEMBER.MEM_NO IS '회원번호';


-- 테이블 삭제하고자 할 때 : DROP TABLE 테이블명;
예 ) DROP TABLE MEMBER;

-- 테이블에 데이터를 추가시키는 구문 ( INSERT )
-- INSERT INTO 테이블명 VALUES(값, 값, 값, 값, 값, 값,) --순서대로 넣어줘야한다.

예 ) 
INSERT INTO MEMBER
VALUES (1,'USER1','PASS1','홍길동','남','010-1111-2222','AAAA@NAEMR.COM','24/02/23');


<제약조건>
    - 원하는 데이터값 (유효한 형식의 값)만 유지하기 위해서 특정 컬럼에 설정하는 제약
    - 데이터 무결성 보장을 목적으로 한다.
    
    종류 : NOT NULL, UNIQUE, CHECK, PRIMARY KEY, FOREIGN KEY

*NOT NULL 제약조건
    해당 컬럼에 반드시 값이 존재해야만 할 경우 (죽, 절대 NULL이 들어오면 안되는 경우)
    삽입/ 수정시 NULL값을 허용하지 않도록 제한
    
    제약조건을 부여하는 방식은 크게 2가지가 있다. (컬럼레벨방식 / 테이블레벨방식)
    * NOT NULL제약조건은 무조건 컬럼레벨방식으로만 가능하다. *




